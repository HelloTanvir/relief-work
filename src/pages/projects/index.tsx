import type { GetServerSideProps, NextPage } from 'next';
import Head from 'next/head';
import { useEffect, useState } from 'react';
import { getProjects } from '../../apiHandlers/project';
import BenefisiariesList from '../../components/BenefisiariesList';
import Header from '../../components/Header';
import Loader from '../../components/Loader';
import Sidebar from '../../components/Sidebar';

interface Data {
    _id: string;
    org: {
        name: string;
    };
    status: string;
    title: string;
    description: string;
    district: string;
    thana: string;
    venue: string;
    eventStartDate: string;
    eventEndDate: string;
    benefisiaries: [
        {
            _id: string;
            status: string;
            name: string;
            occupasion: string;
        }
    ];
}

export const getServerSideProps: GetServerSideProps = async ({
    req,
}): {
    props: {
        projects: Data[];
    };
} => {
    const token = req.cookies.relief_work_token || '';

    const { success, projects } = await getProjects(token);

    if (!success) {
        return {
            redirect: {
                destination: '/',
                permanent: false,
            },
        };
    }

    return {
        props: { projects },
    };
};

const Projects: NextPage = ({ projects }: { projects: Data[] }) => {
    const [isLoading, setIsLoading] = useState(true);

    useEffect(() => {
        setIsLoading(false);
    }, []);

    return (
        <div className="relative">
            <Head>
                <title>Relief Work | Projects</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            {/* loader */}
            {isLoading ? <Loader /> : null}

            <Header />

            <main style={{ height: 'calc(100vh - 57px)' }} className="flex gap-5 pr-5 bg-gray-50">
                <Sidebar />

                {/* cards wrapper */}
                <div className="flex flex-col items-center flex-1 gap-5 mt-5 mb-5 overflow-y-auto">
                    {projects.map((project) => (
                        <div
                            // eslint-disable-next-line no-underscore-dangle
                            key={project._id}
                            className="flex flex-col max-w-xl gap-3 px-5 py-6 bg-white shadow-md md:gap-1 md:w-screen rounded-xl"
                        >
                            <div className="flex flex-wrap items-center gap-2">
                                <span className="text-lg font-medium tracking-wide">
                                    {project.title}
                                </span>
                                <span className="text-sm tracking-wide text-gray-500">
                                    ({project.status})
                                </span>
                            </div>

                            <div className="flex flex-wrap items-center gap-2">
                                <span className="font-medium text-gray-700">Organization :</span>
                                <span className="text-sm tracking-wide text-gray-500">
                                    {project.org.name}
                                </span>
                            </div>

                            <div className="flex flex-wrap items-center gap-2">
                                <span className="font-medium text-gray-700">District :</span>
                                <span className="text-sm tracking-wide text-gray-500">
                                    {project.district}
                                </span>
                            </div>

                            <div className="flex flex-wrap items-center gap-2">
                                <span className="font-medium text-gray-700">Thana :</span>
                                <span className="text-sm tracking-wide text-gray-500">
                                    {project.thana}
                                </span>
                            </div>

                            <div className="flex flex-wrap items-center gap-2">
                                <span className="font-medium text-gray-700">Venue :</span>
                                <span className="text-sm tracking-wide text-gray-500">
                                    {project.venue}
                                </span>
                            </div>

                            <div className="flex flex-wrap items-center gap-2">
                                <span className="font-medium text-gray-700">
                                    Event Start Date :
                                </span>
                                <span className="text-sm tracking-wide text-gray-500">
                                    {new Date(project.eventStartDate).toLocaleDateString('en-US')}
                                </span>
                            </div>

                            {project.eventEndDate ? (
                                <div className="flex flex-wrap items-center gap-2">
                                    <span className="font-medium text-gray-700">
                                        Event End Date :
                                    </span>
                                    <span className="text-sm tracking-wide text-gray-500">
                                        {new Date(project.eventEndDate).toLocaleDateString('en-US')}
                                    </span>
                                </div>
                            ) : null}

                            <BenefisiariesList benefisiaries={project.benefisiaries} />

                            <p className="text-sm font-medium text-gray-900">
                                {project.description}
                            </p>
                        </div>
                    ))}
                </div>
            </main>
        </div>
    );
};

export default Projects;
