import { yupResolver } from '@hookform/resolvers/yup/dist/yup';
import axios from 'axios';
import type { NextPage } from 'next';
import Head from 'next/head';
import Link from 'next/link';
import { useRouter } from 'next/router';
import { useState } from 'react';
import { useForm } from 'react-hook-form';
import Loader from '../../components/Loader';
import TextField from '../../components/TextField';
import fields from '../../utils/LoginFormFields';
import schema from '../../utils/LoginFormSchema';

interface FormData {
    phone: string;
    password: string;
}

const Login: NextPage = () => {
    const router = useRouter();

    const [isLoading, setIsLoading] = useState(false);

    const {
        register,
        handleSubmit,
        formState: { errors },
    } = useForm({
        resolver: yupResolver(schema),
    });

    const submitForm = async (data: FormData) => {
        try {
            setIsLoading(true);

            const res = await axios.post(`${process.env.NEXT_PUBLIC_API}/auth/signin`, data);

            if (res) {
                setIsLoading(false);
                console.log(res.data);
                localStorage.setItem('relief_work-token', res.data.token);
                router.push('/');
            }
        } catch (err) {
            setIsLoading(false);
            console.log(err);
        }
    };

    return (
        <div>
            <Head>
                <title>Relief Work | Login</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            {/* loader */}
            {isLoading ? <Loader /> : null}

            <main
                className="h-screen flex items-center justify-center"
                style={{ backgroundImage: 'url("/background.jpg")' }}
            >
                <div className="flex flex-col items-center px-8 pt-6 pb-8 mb-4 rounded-lg shadow-md bg-white">
                    {/* form header */}
                    <div className="mb-6 flex flex-col items-center gap-4">
                        <h1 className="text-2xl font-medium tracking-wide">
                            Login to your account
                        </h1>
                        <p className="text-sm text-gray-500 font-medium">
                            Don&#39;t have an account yet?{' '}
                            <span className="text-blue-600 hover:text-blue-500 transition-colors">
                                <Link href="/register/organization-info">Sign Up</Link>
                            </span>
                        </p>
                    </div>

                    {/* form body */}
                    <form
                        className="flex flex-col items-end gap-5"
                        onSubmit={handleSubmit(submitForm)}
                    >
                        <div className="flex flex-col">
                            {fields.map((field) => (
                                <TextField
                                    key={field.name}
                                    label={field.label}
                                    type={field.type}
                                    placeholder={field.placeholder}
                                    name={field.name}
                                    className="mt-4 md:w-96"
                                    error={errors[field.name]?.message}
                                    register={register}
                                />
                            ))}
                        </div>

                        <button
                            type="submit"
                            className="px-4 py-2 text-base font-semibold text-gray-100 bg-green-700 rounded-md hover:text-white hover:bg-green-500 hover:border-transparent focus:outline-none focus:ring-2 focus:ring-green-800 focus:ring-offset-2"
                        >
                            Login
                        </button>
                    </form>
                </div>
            </main>
        </div>
    );
};

export default Login;
