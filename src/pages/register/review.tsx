import axios from 'axios';
import type { NextPage } from 'next';
import Head from 'next/head';
import { useRouter } from 'next/router';
import { useEffect, useState } from 'react';
import { useSelector } from 'react-redux';
import { toast } from 'react-toastify';
import Loader from '../../components/Loader';
import { RootState } from '../../store/store';

const Review: NextPage = () => {
    const router = useRouter();
    const registrationData = useSelector<RootState, RootState>((state) => state);

    const [isLoading, setIsLoading] = useState(false);

    // if personal info form is not filled up, redirect to personal info form
    useEffect(() => {
        const personalInfoValues = Object.values(registrationData);
        personalInfoValues.pop(); // removing org fields
        personalInfoValues.push(registrationData.org.role); // role is a personal info here
        personalInfoValues.forEach((field) => {
            if (!field) {
                router.push('/register/personal-info');
            }
        });
    }, [router, registrationData]);

    const handleSubmit = async () => {
        try {
            setIsLoading(true);

            const res = await axios.post(
                `${process.env.NEXT_PUBLIC_API}/auth/register`,
                registrationData
            );

            if (res) {
                setIsLoading(false);
                localStorage.setItem('relief_work-token', res.data.token);
                router.push('/');
                toast.success('Registration successful', { autoClose: 3000 });
            }
        } catch (err) {
            setIsLoading(false);
            toast.error('Registration failed', { autoClose: 3000 });
            console.log(err);
        }
    };

    return (
        <div>
            <Head>
                <title>Relief Work | Registration</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            {/* loader */}
            {isLoading ? <Loader /> : null}

            <main
                className="flex items-center justify-center min-h-screen py-12 md:py-0"
                style={{ backgroundImage: 'url("/background.jpg")' }}
            >
                <div className="flex flex-col items-center px-8 pt-6 pb-8 bg-white rounded-lg shadow-md">
                    {/* header */}
                    <h1 className="mb-6 text-xl font-medium md:text-2xl">
                        Review your informations
                    </h1>

                    {/* body */}
                    <div className="flex flex-col gap-5 md:items-end">
                        <div className="flex flex-col md:flex-row">
                            <div className="pb-8 mb-8 border-b md:pb-0 md:mb-0 md:border-b-0 md:pr-8 md:mr-8 md:border-r">
                                <h3 className="text-xs italic text-gray-400">
                                    Organization Information
                                </h3>

                                {Object.keys(registrationData.org).map((field) => (
                                    <div key={field} className="flex gap-2 mt-2">
                                        <h3 className="text-gray-600 min-w-max">{field} :</h3>
                                        <p className="max-w-xs mt-1 text-sm">
                                            {/* @ts-ignore */}
                                            {registrationData.org[field]}
                                        </p>
                                    </div>
                                ))}
                            </div>

                            <div>
                                <h3 className="text-xs italic text-gray-400">
                                    Personal Information
                                </h3>

                                {Object.keys(registrationData)
                                    .filter((v) => v !== 'org')
                                    .map((field) => (
                                        <div key={field} className="flex gap-2 mt-2">
                                            <h3 className="text-gray-600 min-w-max">{field} :</h3>
                                            <p className="max-w-xs mt-1 text-sm md:max-w-max">
                                                {/* @ts-ignore */}
                                                {registrationData[field]}
                                            </p>
                                        </div>
                                    ))}
                            </div>
                        </div>

                        <div className="flex gap-2 mt-3 md:gap-4 md:mt-0">
                            <button
                                type="button"
                                onClick={() => {
                                    router.push('/register/personal-info');
                                }}
                                className="px-4 py-2 text-base font-semibold text-gray-100 bg-green-700 rounded-md hover:text-white hover:bg-green-500 hover:border-transparent focus:outline-none focus:ring-2 focus:ring-green-800 focus:ring-offset-2"
                            >
                                Previous
                            </button>

                            <button
                                type="button"
                                onClick={handleSubmit}
                                className="px-4 py-2 text-base font-semibold text-gray-100 bg-green-700 rounded-md hover:text-white hover:bg-green-500 hover:border-transparent focus:outline-none focus:ring-2 focus:ring-green-800 focus:ring-offset-2"
                            >
                                Register
                            </button>
                        </div>
                    </div>
                </div>
            </main>
        </div>
    );
};

export default Review;
